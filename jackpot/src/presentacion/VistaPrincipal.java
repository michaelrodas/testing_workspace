/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package presentacion;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.util.ArrayList;

import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JSeparator;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;

/**
 *
 * @author Michael Rodas
 */
public class VistaPrincipal extends JFrame {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private final Modelo sistema;
    private Controlador control;
    private JButton btnDinero, btnGirar;
    private JPanel pnlCarretes, pnlCarrete1, pnlCarrete2, pnlCarrete3;
    private JLabel lblCreditos, lblPerdido, lblAtinaTres, lblAtinaDos, lblDinero, lblCarrete1, lblCarrete2, lblCarrete3, lblEstado, lblGanado;
    private JSeparator sepCheats, sepStats, sepStats2, sepEstado;
    private JProgressBar prgbarDesbloqueadorTimo;
    private ArrayList<ImageIcon> listaImagenes = new ArrayList<ImageIcon>();
    private JCheckBox cbSiempreGana, cbSuperJackpot, cbTrollface;
    private java.awt.Canvas lienzo;
    
	public VistaPrincipal(Modelo modelo) {
        sistema = modelo;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   
    private void initComponents() {

    	configurarVentana();
		crearPanel();
		cargarImagenes();
		agregarCampos();
		agregarBotones();
		configurarLayout();
		mostrarCarretes();
		mostrarOtrosComponentes();
    }

	private void configurarVentana() {
		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		setTitle("Ultimate Jackpot");
		setResizable(false);
		centrarVentana();
	}

	private void centrarVentana() {
		Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
		int height = screenSize.height;
		int width = screenSize.width;
		setSize(width/2, height/2);
		setLocationRelativeTo(null);
	}

	private void crearPanel() {
		pnlCarretes = new JPanel();
		pnlCarretes.setBorder(BorderFactory.createEtchedBorder());

		pnlCarrete1 = new JPanel();
		pnlCarrete1.setBackground(new Color(255, 215, 0));
		pnlCarrete1.setBorder(new SoftBevelBorder(BevelBorder.LOWERED));
		pnlCarrete2 = new JPanel();
		pnlCarrete2.setBackground(new Color(255, 216, 0));
		pnlCarrete2.setBorder(new SoftBevelBorder(BevelBorder.LOWERED));
		pnlCarrete3 = new JPanel();
		pnlCarrete3.setBackground(new java.awt.Color(255, 215, 0));
		pnlCarrete3.setBorder(new SoftBevelBorder(BevelBorder.LOWERED));
	}
	
	/** Loads ImageIcons into the images ArrayList. 
	 *	The difficulty is determined by the number of images present in the ArrayList:
	 *		•	Add images here to make game more difficult. 
	 *		•	Remove images here to make game easier. 
	 */
	private void cargarImagenes() {
		listaImagenes.add(crearImageIcon("/imagenes/Banana.png", "Banano"));
		listaImagenes.add(crearImageIcon("/imagenes/Bar.png", "Bar"));
		listaImagenes.add(crearImageIcon("/imagenes/Bell.png", "Campana"));
		listaImagenes.add(crearImageIcon("/imagenes/Cherry.png", "Cereza"));
		listaImagenes.add(crearImageIcon("/imagenes/Clover.png", "Tr\u00e9bol"));
		listaImagenes.add(crearImageIcon("/imagenes/Diamond.png", "Diamante"));
		listaImagenes.add(crearImageIcon("/imagenes/Plum.png", "Ciruela"));
		listaImagenes.add(crearImageIcon("/imagenes/Seven.png", "Siete"));
		listaImagenes.add(crearImageIcon("/imagenes/Watermelon.png", "Sand\u00eda"));
	}
	
	/** Create a new ImageIcon, unless the URL is not found. */
	public ImageIcon crearImageIcon(String path, String description) {
		if (getClass().getResource(path) != null) {
			return new ImageIcon(getClass().getResource(path), description);
		} else {
			System.err.println("No puede encontrar el archivo: " + path);
			return null;
		}
	}
	
	/** Adds labels to the form. */
	private void agregarCampos() {

		lblCarrete1 = new JLabel();
		lblCarrete2 = new JLabel();
		lblCarrete3 = new JLabel();

		sepStats = new JSeparator();
		lblAtinaDos = new JLabel();
		lblAtinaDos.setText("Atina dos: ");
		lblAtinaTres = new JLabel();
		lblAtinaTres.setText("Atina tres: ");
		lblGanado = new JLabel();
		lblGanado.setText("Ganado: ");

		sepStats2 = new JSeparator();
		sepStats2.setOrientation(SwingConstants.VERTICAL);
		lblCreditos = new JLabel();
		lblCreditos.setText("Cr\u00e9ditos: "+sistema.getCreditos());
		lblDinero = new JLabel();
		lblDinero.setText("Dinero: $"+sistema.getFormatoDecimal().format(sistema.getFondos()));
		lblPerdido = new JLabel();
		lblPerdido.setText("Perdido: ");

		sepEstado = new JSeparator();
		lblEstado = new JLabel();
		lblEstado.setBackground(new Color(255, 255, 255));
		lblEstado.setFont(new Font("Arial", 1, 14));
		lblEstado.setHorizontalAlignment(SwingConstants.CENTER);
		lblEstado.setText("Bienvenido a Ultimate Jackpot!!! ©2014");

		sepCheats = new JSeparator();
		prgbarDesbloqueadorTimo = new JProgressBar();
		prgbarDesbloqueadorTimo.setToolTipText("Llene la barra para desbloquear el men\u00fa de timo.");

		lblCarrete1.setIcon(listaImagenes.get(sistema.getCarrete1()));
		lblCarrete2.setIcon(listaImagenes.get(sistema.getCarrete2()));
		lblCarrete3.setIcon(listaImagenes.get(sistema.getCarrete3()));

	}
	
	private void agregarBotones() {
		btnGirar = new JButton();
		btnGirar.setBackground(new Color(50, 255, 50));
		btnGirar.setText("Girar");
		btnGirar.setToolTipText("Click para girar los carretes!");
		btnGirar.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
		btnGirar.setInheritsPopupMenu(true);
		btnGirar.setMaximumSize(new Dimension(200, 50));
		btnGirar.setMinimumSize(new Dimension(200, 50));
		btnGirar.addActionListener(new ControladorGiro(this));

		btnDinero = new JButton();
		btnDinero.setBackground(new Color(255, 0, 0));
		btnDinero.setText("Comprar Cr\u00e9ditos");
		btnDinero.setToolTipText("$"+sistema.getFormatoDecimal().format(sistema.getApuesta())+" convierte a "+sistema.getCreditosComprados()+" cr\u00e9ditos.");
		btnDinero.setHorizontalTextPosition(SwingConstants.CENTER);
		btnDinero.addActionListener(new ControladorCompraCreditos(this));

		cbSiempreGana = new JCheckBox();
		cbSiempreGana.setText("Modo Siempre Gana");
		cbSiempreGana.setEnabled(false);
		cbSiempreGana.addActionListener(new ControladorSiempreGana(this));

		cbTrollface = new JCheckBox();
		cbTrollface.setText("Trollface");
		cbTrollface.setEnabled(false);
		cbTrollface.addActionListener(new ControladorTrollface(this));

		cbSuperJackpot = new JCheckBox();
		cbSuperJackpot.setText("Super Jackpot");
		cbSuperJackpot.setEnabled(false);
		cbSuperJackpot.addActionListener(new ControladorSuperPremio(this));
	}

    /** Lays out the frame. */
	private void configurarLayout() {

		GroupLayout frameLayout = new GroupLayout(getContentPane());
		getContentPane().setLayout(frameLayout);
		frameLayout.setHorizontalGroup(
				frameLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGap(0, 400, Short.MAX_VALUE)
				);
		frameLayout.setVerticalGroup(
				frameLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGap(0, 300, Short.MAX_VALUE)
				);
	}
	
	/** Lays out the panels and reels. */
	private void mostrarCarretes() {

		GroupLayout pnlCarretesLayout = new GroupLayout(pnlCarretes);
		pnlCarretes.setLayout(pnlCarretesLayout);
		pnlCarretesLayout.setHorizontalGroup(
				pnlCarretesLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(pnlCarretesLayout.createSequentialGroup()
						.addContainerGap()
						.addComponent(pnlCarrete1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18)
						.addComponent(pnlCarrete2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18)
						.addComponent(pnlCarrete3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);
		pnlCarretesLayout.setVerticalGroup(
				pnlCarretesLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(pnlCarretesLayout.createSequentialGroup()
						.addContainerGap()
						.addGroup(pnlCarretesLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
								.addComponent(pnlCarrete2, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(pnlCarrete1, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(pnlCarrete3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
								.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);

		GroupLayout pnlCarrete1Layout = new GroupLayout(pnlCarrete1);
		pnlCarrete1.setLayout(pnlCarrete1Layout);
		pnlCarrete1Layout.setHorizontalGroup(
				pnlCarrete1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(pnlCarrete1Layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(lblCarrete1)
						.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);
		pnlCarrete1Layout.setVerticalGroup(
				pnlCarrete1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(pnlCarrete1Layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(lblCarrete1)
						.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);

		GroupLayout pnlCarrete2Layout = new GroupLayout(pnlCarrete2);
		pnlCarrete2.setLayout(pnlCarrete2Layout);
		pnlCarrete2Layout.setHorizontalGroup(
				pnlCarrete2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(pnlCarrete2Layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(lblCarrete2)
						.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);
		pnlCarrete2Layout.setVerticalGroup(
				pnlCarrete2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(pnlCarrete2Layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(lblCarrete2)
						.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);

		GroupLayout pnlCarrete3Layout = new GroupLayout(pnlCarrete3);
		pnlCarrete3.setLayout(pnlCarrete3Layout);
		pnlCarrete3Layout.setHorizontalGroup(
				pnlCarrete3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(pnlCarrete3Layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(lblCarrete3)
						.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);
		pnlCarrete3Layout.setVerticalGroup(
				pnlCarrete3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(pnlCarrete3Layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(lblCarrete3)
						.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);

	}

	/** lays out the remaining labels, check boxes, progress bars, etc. */
	private void mostrarOtrosComponentes() {

		GroupLayout layout = new GroupLayout(getContentPane());
		getContentPane().setLayout(layout);

		layout.setHorizontalGroup(
				layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
										.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
												.addComponent(sepCheats)
												.addComponent(prgbarDesbloqueadorTimo, GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE))
												.addGap(0, 0, Short.MAX_VALUE))
												.addGroup(layout.createSequentialGroup()
														.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
																.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
																		.addGroup(layout.createSequentialGroup()
																				.addComponent(cbSiempreGana)
																				.addGap(18, 18, 18)
																				.addComponent(cbTrollface)
																				.addGap(18, 18, 18)
																				.addComponent(cbSuperJackpot)
																				.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
																				.addComponent(btnGirar, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																				.addComponent(pnlCarretes, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																				.addComponent(sepStats, GroupLayout.Alignment.TRAILING)
																				.addComponent(lblEstado, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																				.addGroup(layout.createSequentialGroup()
																						.addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
																								.addComponent(lblAtinaDos, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																								.addComponent(lblGanado, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																								.addComponent(lblAtinaTres, GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
																								.addPreferredGap(ComponentPlacement.UNRELATED)
																								.addComponent(sepStats2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
																								.addPreferredGap(ComponentPlacement.UNRELATED)
																								.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
																										.addComponent(lblPerdido, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																										.addComponent(lblCreditos, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																										.addComponent(lblDinero, GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
																										.addGap(0, 0, Short.MAX_VALUE)))
																										.addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
																												.addComponent(btnDinero)
																												.addComponent(sepEstado, GroupLayout.PREFERRED_SIZE, 426, GroupLayout.PREFERRED_SIZE)))
																												.addContainerGap())))
				);

		layout.setVerticalGroup(
				layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(pnlCarretes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.RELATED)
						.addComponent(btnGirar, GroupLayout.PREFERRED_SIZE, 56, GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.UNRELATED)
						.addComponent(sepStats, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.UNRELATED)
						.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
										.addComponent(lblGanado, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(ComponentPlacement.RELATED)
										.addComponent(lblAtinaDos, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(ComponentPlacement.RELATED)
										.addComponent(lblAtinaTres, GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
										.addComponent(sepStats2)
										.addGroup(layout.createSequentialGroup()
												.addComponent(lblPerdido, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(ComponentPlacement.RELATED)
												.addComponent(lblCreditos, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(ComponentPlacement.RELATED)
												.addComponent(lblDinero, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
												.addComponent(btnDinero, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
												.addPreferredGap(ComponentPlacement.UNRELATED)
												.addComponent(sepEstado, GroupLayout.PREFERRED_SIZE, 2, GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(ComponentPlacement.UNRELATED)
												.addComponent(lblEstado, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(ComponentPlacement.UNRELATED)
												.addComponent(sepCheats, GroupLayout.PREFERRED_SIZE, 5, GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(ComponentPlacement.RELATED)
												.addComponent(prgbarDesbloqueadorTimo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(ComponentPlacement.UNRELATED)
												.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
														.addComponent(cbSiempreGana)
														.addComponent(cbTrollface)
														.addComponent(cbSuperJackpot))
														.addContainerGap())
				);

		pack();

	}

    
    

	/** Pone los iconos de los carretes basado en las imagenes cargadas en la lista de imagenes. */
	public void setIconosCarretes(int ico1, int ico2, int ico3) {
		lblCarrete1.setIcon(listaImagenes.get(ico1)); // icono = el indice de la lista = numero aleatorio de carrete
		lblCarrete2.setIcon(listaImagenes.get(ico2));
		lblCarrete3.setIcon(listaImagenes.get(ico3));
	}
	
	/** si el usuario tiene suficientes fondos, cambia el color del boton para avisarle. */
	public void revisarFondos() {
		if (sistema.tieneFondosSuficientesParaApostar()) {
			btnDinero.setBackground(new java.awt.Color(255, 0, 0));
		} else {
			btnDinero.setBackground(new java.awt.Color(50, 255, 50));
		}
	}
	
	public JLabel getLblEstado() {
		return lblEstado;
	}
    
    public JLabel getLblPerdido() {
		return lblPerdido;
	}

	public JLabel getLblGanado() {
		return lblGanado;
	}

	public JLabel getLblAtinaTres() {
		return lblAtinaTres;
	}

	public JLabel getLblAtinaDos() {
		return lblAtinaDos;
	}

	public JCheckBox getCbSuperJackpot() {
		return cbSuperJackpot;
	}

	public JCheckBox getCbTrollface() {
		return cbTrollface;
	}

	public JCheckBox getCbSiempreGana() {
		return cbSiempreGana;
	}

	public ArrayList<ImageIcon> getListaImagenes() {
		return listaImagenes;
	}

	public JPanel getPnlCarretes() {
		return pnlCarretes;
	}

	public JPanel getPnlCarrete1() {
		return pnlCarrete1;
	}

	public JPanel getPnlCarrete2() {
		return pnlCarrete2;
	}

	public JPanel getPnlCarrete3() {
		return pnlCarrete3;
	}
	
	public JLabel getLblDinero() {
		return lblDinero;
	}

	public JProgressBar getPrgbarDesbloqueadorTimo() {
		return prgbarDesbloqueadorTimo;
	}

	public JLabel getLblCreditos() {
		return lblCreditos;
	}
	
	public Modelo getSistema() {
        return sistema;
    }

    public Canvas getLienzo() {
        return lienzo;
    }
    
    public Controlador getControl() {
        if(control == null){
            control = new Controlador(this);
        }
        return control;
    }
    
    public void cambiarColorFondoCarretes() {
		getPnlCarrete1().setBackground(new java.awt.Color(255, 215, 0));
		getPnlCarrete2().setBackground(new java.awt.Color(255, 215, 0));
		getPnlCarrete3().setBackground(new java.awt.Color(255, 215, 0));
	}
}
